# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P6 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 10  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-p6.yaml' will call yolov8-p6.yaml with scale 'n'
  # [depth, width, max_channels]
#  n: [0.33, 0.25, 1024]
  # s: [0.33, 0.50, 1024]
#  m: [0.67, 0.75, 768]
#  l: [1.00, 1.00, 512]
 x: [1.00, 1.25, 512]

# YOLOv8.0x6 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f, [512, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 9-P6/64
  - [-1, 3, C2f, [512, True]]

# YOLOv8.0x6 head
head:
  - [10, 1, MSSPPF, [512]]
  - [8, 1, MSSPPF, [512]]
  - [6, 1, MSSPPF, [512]]
  - [4, 1, MSSPPF, [512]]   # 14

  - [[11, 12], 1, ASFF_2, [512, 0]]
  - [[11, 12], 1, ASFF_2, [512, 1]]
  - [[12, 13], 1, ASFF_2, [512, 0]]
  - [[12, 13], 1, ASFF_2, [512, 1]]
  - [[13, 14], 1, ASFF_2, [512, 0]]
  - [[13, 14], 1, ASFF_2, [512, 1]]   # 20

  - [15, 3, C2f, [512, False]]
  - [16, 3, C2f, [512, False]]
  - [17, 3, C2f, [512, False]]
  - [18, 3, C2f, [512, False]]
  - [19, 3, C2f, [512, False]]
  - [20, 3, C2f, [512, False]]   # 26

  - [[21, 23, 25], 1, ASFF_3, [512, 2]]
  - [[22, 24, 26], 1, ASFF_3, [512, 2]]
  - [[21, 23, 25], 1, ASFF_3, [512, 1]]
  - [[22, 24, 26], 1, ASFF_3, [512, 1]]
  - [[21, 23, 25], 1, ASFF_3, [512, 0]]
  - [[22, 24, 26], 1, ASFF_3, [512, 0]]   #  32

  - [27, 3, C2f, [512, False]]
  - [28, 3, C2f, [512, False]]
  - [29, 3, C2f, [512, False]]
  - [30, 3, C2f, [512, False]]
  - [31, 3, C2f, [512, False]]
  - [32, 3, C2f, [512, False]]       # 38

  - [[33, 34, 35, 36, 37, 38], 1, Detect, [nc]]  # Detect(P3, P4, P5, P6)


